export default 
`
<div id="narrative" class="mediaweb" >
<div class="base">
<dome-base id="base" >
  <!-- NOTE: a-frame causes runtime error at zone.js:1115  
       Uncaught TypeError: Cannot assign to read only property 
       'detachedCallback' of object '#<a-node>' -->
  <!-- <a-scene>
    <a-box color="#6173F4" width="4" height="10" depth="2"></a-box>
  </a-scene> -->
</dome-base>
</div>


<!-- canvas-webgl for insertion into i3d-three.js 'singularity' via
     procedural actions on CameraVR in component lifecycle phase-transitions
     such as ngAfterViewInit() -->
<!-- NOTE: dome-i3d is the ViewContainerRef for adding/replacing i3d-component
     templates dynamically by i3d.ts fed by url-changes from narrative.ts 
     Templates are inserted just under <dome-i3d></dome-i3d> -->
<canvas id="3D" class="space">
</canvas> 
<dome-i3d id="i3d" >
</dome-i3d>
<!-- style="z-index:1; pointer-events:auto"  width="100%" height="100%"> -->


<!-- 2D: svg plane optionally synchronized to 3D as HUD
     viewBox creates a new coordinate system for the (visible) viewport
     of children of svg.
     NOTE: coordinates of elements range from 0 to 100 in x and y.
     The viewBox defines a cell in an infinite coordinate space.
     Since the viewport is anchored at (0,0) and is 100x100
     units exactly match the viewport units 100vw x 100vh.
     NOTE: children will scale as the window-viewport is re-sized.
     aspect ratio clipping and justification are specified in 
     preserveAspectRatio. The default preserveAspectRatio is 
     mid-x mid-y and scales in this manner but does not crop
     In order to keep a .stage 100x100 in vector space coordinates
     for all viewport dimensions preserveAspectRatio = 'none'. -->
<!-- elements in defs are prototypes able to re-used
     their values are added to the values of the 'used' elements
     thus it is easiest if their values are set to zero
     they are not themselves displayed --> 
<div id="2D" class="stage" 
     style="z-index:10; pointer-events:none'" >  
<dome-i2d></dome-i2d>
</div><!-- 2D -->


<!-- <div id="ui" class="ui" 
             style="z-index:100; x:0; y:0; pointer-events:auto; width:16vw; height:70vh; transform:scaleY(0.6) translate(3%, -30%)"> -->
<div id="ui" class="ui" 
  style="z-index:100; x:0; y:0; pointer-events:auto; width:16vw; height:70vh; transform:scaleY(0.6) translate(3%, 90%)"> 
<button (click)="urlChange()" style="z-index:100" >url change</button>
<div id="counter"></div>
<dome-ui ></dome-ui>
</div><!--ui-->


</div><!--narrative-->
`;


